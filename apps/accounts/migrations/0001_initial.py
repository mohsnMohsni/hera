# Generated by Django 3.2 on 2022-12-20 10:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, help_text='required valid email like example@gamil.com', max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(help_text='enter your full name', max_length=100, verbose_name='Name')),
                ('phone', models.IntegerField(blank=True, default=0, verbose_name='Phone')),
                ('avatar', models.ImageField(blank=True, default='default/default_profile.png', upload_to='user/images', verbose_name='Avatar')),
                ('is_seller', models.BooleanField(blank=True, default=False, verbose_name='Is Seller')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Is Staff')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=120, verbose_name='Subject')),
                ('to', models.EmailField(max_length=254, verbose_name='To')),
                ('body', models.TextField(verbose_name='Text body')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_sent', related_query_name='email_sent', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('street', models.CharField(max_length=100, verbose_name='Street')),
                ('alley', models.CharField(max_length=50, verbose_name='Alley')),
                ('no', models.IntegerField(verbose_name='Home no')),
                ('postal_code', models.IntegerField(verbose_name='Postal Code')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', related_query_name='address', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
